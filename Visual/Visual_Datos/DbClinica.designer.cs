#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Visual_Datos
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BDClinica")]
	public partial class DbClinicaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertAuditoria(Auditoria instance);
    partial void UpdateAuditoria(Auditoria instance);
    partial void DeleteAuditoria(Auditoria instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertRol(Rol instance);
    partial void UpdateRol(Rol instance);
    partial void DeleteRol(Rol instance);
    #endregion
		
		public DbClinicaDataContext() : 
				base(global::Visual_Datos.Properties.Settings.Default.BDClinicaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DbClinicaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbClinicaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbClinicaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbClinicaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Auditoria> Auditoria
		{
			get
			{
				return this.GetTable<Auditoria>();
			}
		}
		
		public System.Data.Linq.Table<User> User
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Rol> Rol
		{
			get
			{
				return this.GetTable<Rol>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.updateUser")]
		public int updateUser([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string lastname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> rol)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, username, password, name, lastname, email, rol);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AumentarSueldo")]
		public int AumentarSueldo([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UsuID", DbType="Int")] System.Nullable<int> usuID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PorcentajeAumento", DbType="Decimal(5,2)")] System.Nullable<decimal> porcentajeAumento)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), usuID, porcentajeAumento);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Auditoria")]
	public partial class Auditoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Audi_Id;
		
		private System.DateTime _Audi_Fecha;
		
		private string _Audi_Usuario;
		
		private char _Audi_Tipo;
		
		private int _Audi_CodigoRegistro;
		
		private char _Audi_Estado;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAudi_IdChanging(int value);
    partial void OnAudi_IdChanged();
    partial void OnAudi_FechaChanging(System.DateTime value);
    partial void OnAudi_FechaChanged();
    partial void OnAudi_UsuarioChanging(string value);
    partial void OnAudi_UsuarioChanged();
    partial void OnAudi_TipoChanging(char value);
    partial void OnAudi_TipoChanged();
    partial void OnAudi_CodigoRegistroChanging(int value);
    partial void OnAudi_CodigoRegistroChanged();
    partial void OnAudi_EstadoChanging(char value);
    partial void OnAudi_EstadoChanged();
    #endregion
		
		public Auditoria()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Audi_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Audi_Id
		{
			get
			{
				return this._Audi_Id;
			}
			set
			{
				if ((this._Audi_Id != value))
				{
					this.OnAudi_IdChanging(value);
					this.SendPropertyChanging();
					this._Audi_Id = value;
					this.SendPropertyChanged("Audi_Id");
					this.OnAudi_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Audi_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Audi_Fecha
		{
			get
			{
				return this._Audi_Fecha;
			}
			set
			{
				if ((this._Audi_Fecha != value))
				{
					this.OnAudi_FechaChanging(value);
					this.SendPropertyChanging();
					this._Audi_Fecha = value;
					this.SendPropertyChanged("Audi_Fecha");
					this.OnAudi_FechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Audi_Usuario", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string Audi_Usuario
		{
			get
			{
				return this._Audi_Usuario;
			}
			set
			{
				if ((this._Audi_Usuario != value))
				{
					this.OnAudi_UsuarioChanging(value);
					this.SendPropertyChanging();
					this._Audi_Usuario = value;
					this.SendPropertyChanged("Audi_Usuario");
					this.OnAudi_UsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Audi_Tipo", DbType="NChar(1) NOT NULL")]
		public char Audi_Tipo
		{
			get
			{
				return this._Audi_Tipo;
			}
			set
			{
				if ((this._Audi_Tipo != value))
				{
					this.OnAudi_TipoChanging(value);
					this.SendPropertyChanging();
					this._Audi_Tipo = value;
					this.SendPropertyChanged("Audi_Tipo");
					this.OnAudi_TipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Audi_CodigoRegistro", DbType="Int NOT NULL")]
		public int Audi_CodigoRegistro
		{
			get
			{
				return this._Audi_CodigoRegistro;
			}
			set
			{
				if ((this._Audi_CodigoRegistro != value))
				{
					this.OnAudi_CodigoRegistroChanging(value);
					this.SendPropertyChanging();
					this._Audi_CodigoRegistro = value;
					this.SendPropertyChanged("Audi_CodigoRegistro");
					this.OnAudi_CodigoRegistroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Audi_Estado", DbType="NChar(1) NOT NULL")]
		public char Audi_Estado
		{
			get
			{
				return this._Audi_Estado;
			}
			set
			{
				if ((this._Audi_Estado != value))
				{
					this.OnAudi_EstadoChanging(value);
					this.SendPropertyChanging();
					this._Audi_Estado = value;
					this.SendPropertyChanged("Audi_Estado");
					this.OnAudi_EstadoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _usu_id;
		
		private string _usu_username;
		
		private string _usu_password;
		
		private string _usu_name;
		
		private string _usu_lastname;
		
		private char _usu_status;
		
		private System.Nullable<System.DateTime> _usu_add;
		
		private System.Nullable<System.DateTime> _usu_update;
		
		private System.Nullable<System.DateTime> _usu_delete;
		
		private int _rol_id;
		
		private string _usu_email;
		
		private System.Nullable<decimal> _usu_sueldo;
		
		private System.Nullable<int> _usu_intentos;
		
		private EntityRef<Rol> _Rol;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onusu_idChanging(int value);
    partial void Onusu_idChanged();
    partial void Onusu_usernameChanging(string value);
    partial void Onusu_usernameChanged();
    partial void Onusu_passwordChanging(string value);
    partial void Onusu_passwordChanged();
    partial void Onusu_nameChanging(string value);
    partial void Onusu_nameChanged();
    partial void Onusu_lastnameChanging(string value);
    partial void Onusu_lastnameChanged();
    partial void Onusu_statusChanging(char value);
    partial void Onusu_statusChanged();
    partial void Onusu_addChanging(System.Nullable<System.DateTime> value);
    partial void Onusu_addChanged();
    partial void Onusu_updateChanging(System.Nullable<System.DateTime> value);
    partial void Onusu_updateChanged();
    partial void Onusu_deleteChanging(System.Nullable<System.DateTime> value);
    partial void Onusu_deleteChanged();
    partial void Onrol_idChanging(int value);
    partial void Onrol_idChanged();
    partial void Onusu_emailChanging(string value);
    partial void Onusu_emailChanged();
    partial void Onusu_sueldoChanging(System.Nullable<decimal> value);
    partial void Onusu_sueldoChanged();
    partial void Onusu_intentosChanging(System.Nullable<int> value);
    partial void Onusu_intentosChanged();
    #endregion
		
		public User()
		{
			this._Rol = default(EntityRef<Rol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usu_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int usu_id
		{
			get
			{
				return this._usu_id;
			}
			set
			{
				if ((this._usu_id != value))
				{
					this.Onusu_idChanging(value);
					this.SendPropertyChanging();
					this._usu_id = value;
					this.SendPropertyChanged("usu_id");
					this.Onusu_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usu_username", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string usu_username
		{
			get
			{
				return this._usu_username;
			}
			set
			{
				if ((this._usu_username != value))
				{
					this.Onusu_usernameChanging(value);
					this.SendPropertyChanging();
					this._usu_username = value;
					this.SendPropertyChanged("usu_username");
					this.Onusu_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usu_password", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string usu_password
		{
			get
			{
				return this._usu_password;
			}
			set
			{
				if ((this._usu_password != value))
				{
					this.Onusu_passwordChanging(value);
					this.SendPropertyChanging();
					this._usu_password = value;
					this.SendPropertyChanged("usu_password");
					this.Onusu_passwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usu_name", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string usu_name
		{
			get
			{
				return this._usu_name;
			}
			set
			{
				if ((this._usu_name != value))
				{
					this.Onusu_nameChanging(value);
					this.SendPropertyChanging();
					this._usu_name = value;
					this.SendPropertyChanged("usu_name");
					this.Onusu_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usu_lastname", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string usu_lastname
		{
			get
			{
				return this._usu_lastname;
			}
			set
			{
				if ((this._usu_lastname != value))
				{
					this.Onusu_lastnameChanging(value);
					this.SendPropertyChanging();
					this._usu_lastname = value;
					this.SendPropertyChanged("usu_lastname");
					this.Onusu_lastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usu_status", DbType="NChar(1) NOT NULL")]
		public char usu_status
		{
			get
			{
				return this._usu_status;
			}
			set
			{
				if ((this._usu_status != value))
				{
					this.Onusu_statusChanging(value);
					this.SendPropertyChanging();
					this._usu_status = value;
					this.SendPropertyChanged("usu_status");
					this.Onusu_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usu_add", DbType="DateTime")]
		public System.Nullable<System.DateTime> usu_add
		{
			get
			{
				return this._usu_add;
			}
			set
			{
				if ((this._usu_add != value))
				{
					this.Onusu_addChanging(value);
					this.SendPropertyChanging();
					this._usu_add = value;
					this.SendPropertyChanged("usu_add");
					this.Onusu_addChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usu_update", DbType="DateTime")]
		public System.Nullable<System.DateTime> usu_update
		{
			get
			{
				return this._usu_update;
			}
			set
			{
				if ((this._usu_update != value))
				{
					this.Onusu_updateChanging(value);
					this.SendPropertyChanging();
					this._usu_update = value;
					this.SendPropertyChanged("usu_update");
					this.Onusu_updateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usu_delete", DbType="DateTime")]
		public System.Nullable<System.DateTime> usu_delete
		{
			get
			{
				return this._usu_delete;
			}
			set
			{
				if ((this._usu_delete != value))
				{
					this.Onusu_deleteChanging(value);
					this.SendPropertyChanging();
					this._usu_delete = value;
					this.SendPropertyChanged("usu_delete");
					this.Onusu_deleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rol_id", DbType="Int NOT NULL")]
		public int rol_id
		{
			get
			{
				return this._rol_id;
			}
			set
			{
				if ((this._rol_id != value))
				{
					if (this._Rol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrol_idChanging(value);
					this.SendPropertyChanging();
					this._rol_id = value;
					this.SendPropertyChanged("rol_id");
					this.Onrol_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usu_email", DbType="NChar(100)")]
		public string usu_email
		{
			get
			{
				return this._usu_email;
			}
			set
			{
				if ((this._usu_email != value))
				{
					this.Onusu_emailChanging(value);
					this.SendPropertyChanging();
					this._usu_email = value;
					this.SendPropertyChanged("usu_email");
					this.Onusu_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usu_sueldo", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> usu_sueldo
		{
			get
			{
				return this._usu_sueldo;
			}
			set
			{
				if ((this._usu_sueldo != value))
				{
					this.Onusu_sueldoChanging(value);
					this.SendPropertyChanging();
					this._usu_sueldo = value;
					this.SendPropertyChanged("usu_sueldo");
					this.Onusu_sueldoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usu_intentos", DbType="Int")]
		public System.Nullable<int> usu_intentos
		{
			get
			{
				return this._usu_intentos;
			}
			set
			{
				if ((this._usu_intentos != value))
				{
					this.Onusu_intentosChanging(value);
					this.SendPropertyChanging();
					this._usu_intentos = value;
					this.SendPropertyChanged("usu_intentos");
					this.Onusu_intentosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_User", Storage="_Rol", ThisKey="rol_id", OtherKey="rol_id", IsForeignKey=true)]
		public Rol Rol
		{
			get
			{
				return this._Rol.Entity;
			}
			set
			{
				Rol previousValue = this._Rol.Entity;
				if (((previousValue != value) 
							|| (this._Rol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rol.Entity = null;
						previousValue.User.Remove(this);
					}
					this._Rol.Entity = value;
					if ((value != null))
					{
						value.User.Add(this);
						this._rol_id = value.rol_id;
					}
					else
					{
						this._rol_id = default(int);
					}
					this.SendPropertyChanged("Rol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rol")]
	public partial class Rol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _rol_id;
		
		private string _rol_description;
		
		private char _rol_status;
		
		private EntitySet<User> _User;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onrol_idChanging(int value);
    partial void Onrol_idChanged();
    partial void Onrol_descriptionChanging(string value);
    partial void Onrol_descriptionChanged();
    partial void Onrol_statusChanging(char value);
    partial void Onrol_statusChanged();
    #endregion
		
		public Rol()
		{
			this._User = new EntitySet<User>(new Action<User>(this.attach_User), new Action<User>(this.detach_User));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rol_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int rol_id
		{
			get
			{
				return this._rol_id;
			}
			set
			{
				if ((this._rol_id != value))
				{
					this.Onrol_idChanging(value);
					this.SendPropertyChanging();
					this._rol_id = value;
					this.SendPropertyChanged("rol_id");
					this.Onrol_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rol_description", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string rol_description
		{
			get
			{
				return this._rol_description;
			}
			set
			{
				if ((this._rol_description != value))
				{
					this.Onrol_descriptionChanging(value);
					this.SendPropertyChanging();
					this._rol_description = value;
					this.SendPropertyChanged("rol_description");
					this.Onrol_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rol_status", DbType="NChar(1) NOT NULL")]
		public char rol_status
		{
			get
			{
				return this._rol_status;
			}
			set
			{
				if ((this._rol_status != value))
				{
					this.Onrol_statusChanging(value);
					this.SendPropertyChanging();
					this._rol_status = value;
					this.SendPropertyChanged("rol_status");
					this.Onrol_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_User", Storage="_User", ThisKey="rol_id", OtherKey="rol_id")]
		public EntitySet<User> User
		{
			get
			{
				return this._User;
			}
			set
			{
				this._User.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_User(User entity)
		{
			this.SendPropertyChanging();
			entity.Rol = this;
		}
		
		private void detach_User(User entity)
		{
			this.SendPropertyChanging();
			entity.Rol = null;
		}
	}
}
#pragma warning restore 1591
